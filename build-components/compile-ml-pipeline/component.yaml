name: compile pipeline
description: Loads all components and compiles the pipeline
inputs:
- {name: add_component, type: YAML}
- {name: pipeline_name, type: String}
outputs:
- {name: pipeline_package, type: tar.gz}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'kfp' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet
      --no-warn-script-location 'kfp' --user) && "$0" "$@"
    - python3
    - -u  # Auto-flush. We want the logs to appear in the console immediately.
    - -c  # Inline scripts are easy, but have size limitaions and the error traces do not show source lines.
    - |
      import kfp.components as comp 
      import kfp
      import sys 
      import kfp.dsl as dsl
      import os
      import kfp.components as comp    
      try:
         os.makedirs(sys.argv[2])    
         print("Directory " , sys.argv[2] ,  " Created ")
      except FileExistsError:
         print("Directory " , sys.argv[2] ,  " already exists")
      
      add_comp_path = sys.argv[3] + "/component.yaml"
      pipeline_package_path = sys.argv[2] + "/" + sys.argv[1] + ".tar.gz"
      add_op = comp.load_component_from_file(add_comp_path)

      def pipeline(a='a',b='7'):
          add_task = add_op(a, 4)
      kfp.compiler.Compiler().compile(pipeline,pipeline_package_path)
    - {inputValue: pipeline_name}
    - {outputPath: pipeline_package}
    - {inputPath: add_component}