name: upload ml-pipeline
description: uploads a compiled pipeline
inputs:
- {name: Pipeline package, type: tar.gz}
- {name: Pipeline name, type: String}
- {name: Pipeline version name, type: String}
implementation:
  container:
    image: python:3.7
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'kfp==1.7' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet
      --no-warn-script-location 'kfp==1.7' --user) && "$0" "$@"
    - python3
    - -u  # Auto-flush. We want the logs to appear in the console immediately.
    - -c  # Inline scripts are easy, but have size limitaions and the error traces do not show source lines.
    - |
      import kfp
      import sys   
      pipeline_package = sys.argv[1] + "/" + sys.argv[2] + ".yaml"
      pipeline_id = kfp.Client().get_pipeline_id(sys.argv[2])
      if (pipeline_id == None):
          print("create new Pipeline")
          pipeline_id = kfp.Client().pipeline_uploads.upload_pipeline(pipeline_package, name=sys.argv[2]).id
      kfp.Client().upload_pipeline_version(pipeline_package_path=pipeline_package,pipeline_version_name=sys.argv[3],pipeline_id=pipeline_id)             
      print(sys.argv[2])
    - {inputPath: Pipeline package}
    - {inputValue: Pipeline name}
    - {inputValue: Pipeline version name}
